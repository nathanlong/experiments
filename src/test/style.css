:root {
  --color-text: #fff;
  --color-bg: #111111;
  --font-factor: 0.059;
  --font-line: 0.745;
  --font-size: 25vw;
  --color-purple: #cdb4db;
  --color-bubblegum: #ffc8dd;
  --color-pink: #ffafcc;
  --color-cottoncandy: #bde0fe;
  --color-cyan: #a2d2ff;
  --color-a: var(--color-purple);
  --color-b: var(--color-bubblegum);
  --color-c: var(--color-pink);
  --color-d: var(--color-cottoncandy);
  --color-e: var(--color-cyan);
}

.container-small {
  margin: 0 auto;
  max-width: 450px;
  padding: 2rem;
}

.container-wide {
  padding-left: 3vw;
  padding-right: 3vw;
}

.color-a {
  background-color: var(--color-a);
}

.color-b {
  background-color: var(--color-b);
}

.color-c {
  background-color: var(--color-c);
}

.color-d {
  background-color: var(--color-d);
}

.color-e {
  background-color: var(--color-e);
}

/* Grid Base */

.grid-image {
  display: grid;
  width: 100%;
}

.grid-el {
  position: relative;
  transition: background-color 1000ms ease-in;
}

.grid-el img {
  bottom: 0;
  height: 100%;
  left: 0;
  object-fit: cover;
  object-position: center center;
  position: absolute;
  right: 0;
  top: 0;
  width: 100%;
}

/* Grid 1 */

.grid-image-1 {
  aspect-ratio: 16/7;
  grid-template-columns: 2fr 1fr;
  grid-template-rows: 1fr 1fr;
  /* although the grid doesn't visually increase in height, the scaling can cause overflow */
  overflow: hidden;
}

.grid-el-img-1 {
  opacity: 1;
  transition: opacity 1000ms ease-in-out;
  z-index: 1;
}

.swap .grid-el-img-1 {
  opacity: 0;
}

.image-a {
  grid-column: 1 / span 1;
  grid-row: 1 / span 2;
}

.swap .image-a {
  background-color: var(--color-d);
  grid-column: 2/2;
  grid-row: 1/1;
}

.image-b {
  grid-column: 2 / 2;
  grid-row: 1 / 1;
}

.swap .image-b {
  background-color: var(--color-e);
  grid-column: 2 / 2;
  grid-row: 2 / 2;
}

.image-c {
  grid-column: 2 / 2;
  grid-row: 2 / 2;
}

.swap .image-c {
  background-color: var(--color-a);
  grid-column: 1 / span 1;
  grid-row: 1 / span 2;
}

/* Grid 2 */

.grid-image-2 {
  aspect-ratio: 16/6;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(6, 1fr);
  overflow: hidden;
}

.image-2a {
  grid-column: 1 / 4;
  grid-row: 1 / 7;
}

.swap .image-2a {
  background-color: var(--color-b);
  grid-column: 1/5;
  grid-row: 1/7;
}

.image-2b {
  grid-column: 4 / 7;
  grid-row: 1 / 4;
}

.swap .image-2b {
  background-color: var(--color-c);
  grid-column: 5/7;
  grid-row: 1/3;
}

.image-2c {
  grid-column: 7/9;
  grid-row: 1/4;
}

.swap .image-2c {
  background-color: var(--color-d);
  grid-column: 7/9;
  grid-row: 1/3;
}

.image-2d {
  grid-column: 4/9;
  grid-row: 4/7;
}

.swap .image-2d {
  grid-column: 5/7;
  grid-row: 3/7;
  background-color: var(--color-e);
}

.image-2e {
  /* if the width is 0 on compute, flip drops it out on the reverse set */
  grid-column: 8/9;
  grid-row: 4/7;
  z-index: -1;
}

.swap .image-2e {
  grid-column: 7/9;
  grid-row: 3/7;
  background-color: var(--color-a);
}

/* Grid 3 */

.grid-image-3 {
  aspect-ratio: 16/6;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: 1fr;
  overflow: hidden;
}

.image-3a {
  grid-column: 1/4;
  grid-row: 1/2;
}

.swap .image-3a {
  grid-column: 1/3;
  grid-row: 1/2;
}

.image-3b {
  grid-column: 4/6;
  grid-row: 1/2;
}

.swap .image-3b {
  grid-column: 3/6;
  grid-row: 1/2;
}
